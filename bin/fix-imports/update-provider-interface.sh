#!/bin/bash
# update-provider-interface.sh
# Script pour modifier provider.py afin qu'il utilise l'interface sans casser les imports

echo "üîß Modification de provider.py pour utiliser l'interface LLMProviderInterface..."

# V√©rifier que le fichier provider.py existe
PROVIDER_FILE="claude_edition_litteraire/llm/provider.py"
if [ ! -f "$PROVIDER_FILE" ]; then
    echo "‚ùå Erreur: Le fichier $PROVIDER_FILE n'existe pas."
    exit 1
fi

# Cr√©er une sauvegarde du fichier original
cp "$PROVIDER_FILE" "${PROVIDER_FILE}.bak_$(date +%Y%m%d%H%M%S)"
echo "‚úÖ Sauvegarde cr√©√©e: ${PROVIDER_FILE}.bak_$(date +%Y%m%d%H%M%S)"

# 1. D'abord, v√©rifier si l'interface est d√©j√† import√©e
if grep -q "from ..interfaces.llm_interface import LLMProviderInterface" "$PROVIDER_FILE"; then
    echo "‚ö†Ô∏è L'interface est d√©j√† import√©e, aucun changement n√©cessaire."
else
    # 2. Ajouter l'import de l'interface au d√©but du fichier
    # Trouver la premi√®re ligne apr√®s le docstring pour y ins√©rer l'import
    DOCSTRING_END=$(grep -n '"""' "$PROVIDER_FILE" | head -2 | tail -1 | cut -d: -f1)
    
    if [ -n "$DOCSTRING_END" ]; then
        # Ins√©rer apr√®s la fin du docstring
        sed -i "${DOCSTRING_END}a from ..interfaces.llm_interface import LLMProviderInterface" "$PROVIDER_FILE"
    else
        # Si pas de docstring, ins√©rer au d√©but du fichier
        sed -i '1i from ..interfaces.llm_interface import LLMProviderInterface' "$PROVIDER_FILE"
    fi
    
    echo "‚úÖ Import de l'interface ajout√©."
fi

# 3. Modifier la d√©finition de la classe pour h√©riter de l'interface
if grep -q "class LLMProvider(LLMProviderInterface, ABC):" "$PROVIDER_FILE"; then
    echo "‚ö†Ô∏è La classe h√©rite d√©j√† de l'interface, aucun changement n√©cessaire."
elif grep -q "class LLMProvider(ABC):" "$PROVIDER_FILE"; then
    # Remplacer par l'h√©ritage multiple
    sed -i 's/class LLMProvider(ABC):/class LLMProvider(LLMProviderInterface, ABC):/' "$PROVIDER_FILE"
    echo "‚úÖ H√©ritage modifi√© pour inclure l'interface LLMProviderInterface."
else
    echo "‚ùå Erreur: Format de classe LLMProvider inattendu. V√©rification manuelle n√©cessaire."
    # Afficher les premi√®res lignes de d√©finition de classe pour inspection
    grep -A 5 "class LLMProvider" "$PROVIDER_FILE"
    exit 1
fi

# 4. V√©rifier que le fichier compile correctement
python3 -c "from claude_edition_litteraire.llm.provider import LLMProvider; print('‚úÖ V√©rification r√©ussie: LLMProvider peut √™tre import√©e.')" || {
    echo "‚ùå Erreur: La modification a introduit une erreur de compilation."
    echo "üîÑ Restauration de la sauvegarde..."
    LATEST_BACKUP=$(ls -t "${PROVIDER_FILE}.bak_"* | head -1)
    cp "$LATEST_BACKUP" "$PROVIDER_FILE"
    echo "‚úÖ Fichier original restaur√©."
    exit 1
}

echo "‚úÖ provider.py a √©t√© modifi√© avec succ√®s pour utiliser l'interface LLMProviderInterface."
echo "üìù Pour annuler cette modification: cp ${PROVIDER_FILE}.bak_* $PROVIDER_FILE"
